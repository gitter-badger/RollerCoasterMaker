@page "/"
<div class="console"> <p style="color:whitesmoke">Tracks: @game.coaster.TrackCount</p></div>
<div class="flex-container">
    <img onclick="@BuildLeft" src="/assets/images/left64.png" class="rc_btn" />
    <img onclick="@BuildStright" src="/assets/images/stright64.png" class="rc_btn" />
    <img onclick="@BuildRight" src="/assets/images/right64.png" class="rc_btn" />
    <img onclick="@BuildUp" src="/assets/images/up64.png" class="rc_btn" />
    <img onclick="@BuildDown" src="/assets/images/down64.png" class="rc_btn" />
    <img onclick="@Back" src="/assets/images/back64.png" class="rc_btn" />
</div>

@functions {
    RCLibrary.RollerCoasterMaker game = new RCLibrary.RollerCoasterMaker();
    string loaded = "";
    protected override void OnInit()
    {
        //Will Get Starting Tracks
        ContentPackage.CoasterUpdate(game.coaster.GetLastCoasterUpdate());
        ContentPackage.Loaded(loaded);
        //    return UpdateForecasts();
    }

    void Reset()
    {
        game.Reset();
        SendCoaster();
    }
    void BuildStright()
    {
        game.BuildStright();
        SendCoaster();
    }
    void BuildLeft()
    {
        game.BuildLeft();
        SendCoaster();
    }
    void BuildRight()
    {
        game.BuildRight();
        SendCoaster();
    }
    void BuildUp()
    {
        game.BuildUp();
        SendCoaster();
    }
    void BuildDown()
    {
        game.BuildDown();
        SendCoaster();
    }
    void Back()
    {
        game.Back();
        SendCoaster();
    }
    void Log()
    {
        game.Log();
    }
    void SendCoaster()
    {
        ContentPackage.CoasterUpdate(game.coaster.GetLastCoasterUpdate());
    }
}
